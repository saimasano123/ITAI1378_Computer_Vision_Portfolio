Building an AI agent to play Flappy Bird was an eye-opening experience, especially in understanding the principles of reinforcement learning (RL). At first, it seemed like a simple task, but as I delved deeper into the coding and algorithmic steps required, I realized how crucial coding knowledge is for implementing RL techniques effectively. Without the ability to write and understand the code, it is difficult to gain true insights into how reinforcement learning algorithms, such as Q-learning or deep Q-networks (DQN), operate.

Through this project, I learned how an AI agent learns through trial and error, where it receives feedback from the environment (positive or negative) based on the actions it takes. This process of exploration and exploitation helped me see how reward systems drive an agent to make better decisions over time. However, without coding, it would have been impossible to implement the necessary training loops, update rules, and reward structures that are central to RL.

The difficulty of coding the agent to interact with the game environment and refine its strategy was a reminder that hands-on experience is key to truly understanding RL. This project reinforced the idea that to gain meaningful insights into artificial intelligence, especially in fields like RL, practical coding skills are essential for applying theoretical concepts and troubleshooting complex algorithms.